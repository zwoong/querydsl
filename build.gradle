plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.3'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'study'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	querydsl // ✅ 추가
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// ✅ QueryDSL JPA + APT (annotation processor)
	implementation 'com.querydsl:querydsl-jpa:5.1.0:jakarta'
	annotationProcessor 'com.querydsl:querydsl-apt:5.1.0:jakarta'

	// ✅ Jakarta Persistence API 추가
	implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'
	annotationProcessor 'jakarta.persistence:jakarta.persistence-api:3.1.0' // ✅ 추가

	// lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	runtimeOnly 'com.h2database:h2'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

// ✅ QueryDSL Q 클래스 생성 경로 지정
def querydslDir = "$buildDir/generated/querydsl"

sourceSets {
	main {
		java {
			srcDir querydslDir
		}
	}
}

// ✅ 컴파일 태스크 설정
tasks.register('compileQuerydsl', JavaCompile) {
	group = 'build'
	description = 'Compile QueryDSL Q-types'
	source = sourceSets.main.java
	classpath = configurations.querydsl
	destinationDirectory.set(file(querydslDir))
	options.annotationProcessorPath = configurations.annotationProcessor
}
